---

compute_engine_instance:
  # Image list available via
  # gcloud compute images list --project freebsd-org-cloud-dev --no-standard-images
  platform: freebsd
  image_project: freebsd-org-cloud-dev
  image: freebsd-13-2-release-amd64
  cpu: 8
  memory: 8G
  disk: 40

task:
  matrix:
  - name: aarch64
    env:
      TARGET: aarch64-unknown-freebsd@13
  - name: armv6
    env:
      TARGET: armv6-unknown-freebsd@13
  - name: armv7
    env:
      TARGET: armv7-unknown-freebsd@13
  - name: i686
    env:
      TARGET: i686-unknown-freebsd@13
  - name: powerpc
    env:
      TARGET: powerpc-unknown-freebsd@13
  - name: powerpc64
    env:
      TARGET: powerpc64-unknown-freebsd@13
  - name: powerpc64le
    env:
      TARGET: powerpc64le-unknown-freebsd@13
  - name: riscv64gc
    env:
      TARGET: riscv64gc-unknown-freebsd@13
  - name: x86_64
    env:
      TARGET: x86_64-unknown-freebsd@13
  timeout_in: 120m
  install_script:
  - pkg install -y rust-nightly

  build_script:
  - cargo install -Z build-std --verbose --target ${TARGET} ripgrep
    #  setup_script:
    #  - uname -a
    #  - gpart show
    #  - df -m
    #  - pkg --version
    #  - pw useradd user
    #  - mkdir -p /usr/obj/$(pwd -P)
    #  - chown user:user /usr/obj/$(pwd -P)

    #  build_world_script:
    #  - su user -c "make -j$(sysctl -n hw.ncpu) ${EXTRA_MAKE_FLAGS} CROSS_TOOLCHAIN=${TOOLCHAIN} WITHOUT_TOOLCHAIN=yes buildworld"

    #  build_kernel_script:
    #  - su user -c "make -j$(sysctl -n hw.ncpu) CROSS_TOOLCHAIN=${TOOLCHAIN} WITHOUT_TOOLCHAIN=yes buildkernel"

    #  package_script:
    #  - su user -c "make CROSS_TOOLCHAIN=${TOOLCHAIN} WITHOUT_TOOLCHAIN=yes packages"

    #  package_check_script:
    #  - su user -c "/usr/libexec/flua tools/pkgbase/metalog_reader.lua -c /usr/obj/$(pwd -P)/${TARGET}.${TARGET_ARCH}/worldstage/METALOG"

    #  test_script:
    #  - sh .cirrus-ci/pkg-install.sh qemu-nox11
    #  - sh tools/boot/ci-qemu-test.sh

    #  make_sysent_script:
  # Check that make sysent results were committed if required
  #  - make sysent
  #  - if ! git diff --exit-code; then printf "\n>>> Generated sysent files not updated, run make sysent <<<\n"; false; fi

    #  include_ldirs_script:
  # Check that includes/Makefile refers to existing directories
  #  - if ! make -C include/ check-ldirs; then printf "\n>>> include/Makefile lists nonexistant directories <<<\n"; false; fi

    #  makeman_script:
  # Check that the committed src.conf.5 matches the one generated by
  # tools/build/options/makeman (modulo the date which always updates)
  # XXX: This script is slow so keep it last
  #  - (make makeman 2> /tmp/makeman.out); cat /tmp/makeman.out
  #  - if ! git diff --exit-code --ignore-matching-lines "^.Dd" share/man/man5/src.conf.5; then printf "\n>>> src.conf.5 was not updated as required <<<\n"; false; fi
  #  - if grep -q "no description found" /tmp/makeman.out; then printf "\n>>> Missing description files <<<\n"; false; fi

    #  post_script:
    #  - df -m
    #  - du -m -s /usr/obj
