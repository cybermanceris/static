---
name: Build using cross-tools
on: [push]
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  starship-ubuntu:
    name: Build using cross tools | ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      continue-on-error: true
      matrix:
        include:
          - name: aarch64
            target: aarch64-unknown-freebsd@13
          - name: i686
            target: i686-unknown-freebsd@13
          - name: powerpc
            target: powerpc-unknown-freebsd@13
          - name: powerpc64
            target: powerpc64-unknown-freebsd@13
          - name: powerpc64le
            target: powerpc64le-unknown-freebsd@13
          - name: riscv64gc
            target: riscv64gc-unknown-freebsd@13
          - name: x86_64
            target: x86_64-unknown-freebsd@13
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'starship/starship'
      - name: Install Rust
        run: |
          rustup update nightly && rustup default nightly
          rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
      - name: Build and Install ripgrep
        run: cargo install --verbose -Z build-std --root .cargo/${{ matrix.name }} ripgrep
      - name: Build and Install starship
        run: cargo install --verbose -Z build-std --root .cargo/${{ matrix.name }} starship
      - name: Compress artifacts
        run: tar -czvf ${{ matrix.name }}.tar.gz .cargo/${{ matrix.name }}/bin
      - name: Release
        uses: fnkr/github-action-ghr@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GHR_PATH: ${{ matrix.name }}.tar.gz
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
